#include <bits/stdc++.h>
using namespace std;
vector<vector<int>> floyd_warshall(vector<vector<int>>& g,int src){
  vector<vector<int>> dp(g);
  int n=g.size();

  for(int k=0; k<n; k++){

    for(int i=0; i<n; i++){
      for(int j=0; j<n; j++){

        if(dp[i][k]!=INT_MAX and dp[k][j]!=INT_MAX and dp[i][j]>dp[i][k]+dp[k][j])
          dp[i][j]=dp[i][k]+dp[k][j];
      }
    }
  }
  return dp;
}
int main() {
  vector<vector<int>> g{
    {0, INT_MAX, -2, INT_MAX},
    {4, 0, 3, INT_MAX},
    {INT_MAX, INT_MAX, 0, 2},
    {INT_MAX, -1, INT_MAX, 0}
  };

  vector<vector<int>> ans=floyd_warshall(g, 1);
  for(auto x:ans){
    for(auto y:x)
      cout<<y<<" ";
    cout<<endl;
  }
  return 0;
}